{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","ms","x","Promise","resolve","setTimeout","res","json","catch","Response","Error","FindMovie","onMovie","useState","setQuery","findMovie","setFindMovie","loading","setLoading","error","setError","handleSubmit","event","a","preventDefault","response","Title","Poster","Plot","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","currentTarget","classNames","style","width","disabled","onClick","prev","some","alert","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49579550.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=e48398ea';\n\nfunction sleeper(ms:number) {\n  return (x: Response): Promise<Response> => {\n    return new Promise(resolve => setTimeout(() => resolve(x), ms));\n  };\n}\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(sleeper(500))\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onMovie: React.Dispatch<React.SetStateAction<Movie[]>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ onMovie }) => {\n  const [query, setQuery] = useState<string>('');\n  const [findMovie, setFindMovie] = useState<Movie | null >(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    setFindMovie(null);\n    event.preventDefault();\n    try {\n      setLoading(true);\n      const response = await getMovie(query);\n\n      if ('Error' in response) {\n        setError(true);\n        setLoading(false);\n\n        return;\n      }\n\n      const {\n        Title,\n        Poster,\n        Plot,\n        imdbID,\n      } = response;\n\n      if (response === null) {\n        return;\n      }\n\n      setFindMovie({\n        title: Title,\n        description: Plot,\n        imgUrl: Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : Poster,\n        imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n        imdbId: imdbID,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlerAddMovie = () => {\n    onMovie((prev) => {\n      if (!findMovie) {\n        return prev;\n      }\n\n      const hasMovie = (prev.some(movie => movie.imdbId === findMovie?.imdbId));\n\n      if (hasMovie) {\n        alert('you have same');\n\n        return prev;\n      }\n\n      return [...prev, findMovie];\n    });\n\n    setQuery('');\n    setFindMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setError(false);\n                setQuery(event.currentTarget.value);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': loading },\n              )}\n              style={{ width: '114px' }}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {findMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handlerAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {findMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={findMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMovie={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}